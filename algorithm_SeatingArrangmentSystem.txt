take input from the user in the form of A[i][j] where i is no of sections and j is no of students in each sections

seatingArrangment(A[][])
    len = A.length   //copying the length of array A into variable len
    flag = false
    NArray = [] //Declaring a new array as a output
    while (len > 0)
        flag = false
        //popping from input array and pushing in output array according to the condition
        //assuming that if the size of sub-array is zero it will be popped completely from main array whose size will be decremented
        //A[j] is the sub-array and A[j][0] is it's first element and i is the size of new array
        for j=0 to len
            if (A[j].length > 0 AND NArray[i - 10] != A[j][0] AND (NArray[i - 1] != A[j][0] OR i % 10 == 0))
                NArray.push(A[j].pop())     
                i++
                flag = true
                
        //flag will remain false if no value is pushed into new array but there are multiple students remaining which are not satisfying the given condition then they will be allotted in two ways
        if flag == false
            finish = input()  //it will be asked to user either he wants 1 or 2
            //if 1 then allot them as it is, if 2 allot them with spaces
            if (finish == 1)
                for r=0 to len
                    while (A[r].len > 0)
                        NArray.push(A[r].pop())
            else if (finish == 2)
                flag = true
                NArray.push(Space)
                i++

    return NArray
